<?xml version="1.0" encoding="UTF-8"?>
<chapter xml:id="report">
    <title>BIRT报表</title>

    <para>jasperreports, jfreechart, birt需要选择一个使用。</para>

    <sect1>
        <title>概述</title>
        <para>网站: http://www.eclipse.org/birt/phoenix/</para>
        <para>BIRT报表拥有和Dreamweaver一般的操作界面，可以像画table一样画报表，生成图片，导出Excel，html分页样样齐全，样式和script设置简单，貌似还有OLAP导航功能。问题就是太大了，而且每次按照springside中的方式，每次都要创建一个ReportEngine的话，感觉效率是否也太低了。</para>
        <para>Demo中把查询语句统一写在Manager里，对查询语句综合处理与重用，而不是默认的在每个模版文件里面写SQL。</para>
        <para>学习资料:</para>
        <orderedlist>
            <listitem>
                <para>Birt的IBM DW的中文教程：<ulink url="http://www-128.ibm.com/developerworks/cn/opensource/os-ecl-birt/"/></para>
            </listitem>
            <listitem>
                <para>最权威、详细的莫过于birt的 <ulink url="http://www.eclipse.org/birt/phoenix/">官方文档</ulink></para>
            </listitem>
            <listitem>
                <para>难得的比较全面的<ulink url="http://blogger.org.cn/blog/more.asp?name=sixsun&amp;id=13933">BIRT中文指南</ulink></para>
            </listitem>
            <listitem>
                <para><ulink url="http://download.eclipse.org/birt/downloads/demos/FirstReport/MyFirstReport.html">Flash Demo</ulink></para>
            </listitem>
        </orderedlist>
    </sect1>

    <sect1>
        <title>部署BIRT2.2.2</title>
        <para>将/plugins, /configuration两个目录复制到webapp根目录， 将lib复制到webapp/WEB-INF/lib</para>
        <para>注意birt-2.2.2必须使用rhino-1.6R7。如果使用了rhino-1.7R1就会报错。</para>
    </sect1>

    <sect1>
        <title>将spring与birt集成在一起</title>
        <sect2>
            <title>why not 说明</title>
            <sect3>
                <title>为什么没有使用 birt report viewer</title>
                <para><ulink url="http://www.eclipse.org/birt/phoenix/deploy/viewerUsage.php">BIRT Report Viewer</ulink>貌似做得很周到，提供如浏览，打印，export to CSV ,过滤参数的传入等一系列的快速操作．</para>
                <para>然而细心思考过，这个viewer还是存在不少问题：</para>
                <para>如不适用的报表传入参数方式(无输入验证，无日期控件)；代码复杂，可扩展性差......</para>
                <para>具体有待进一步考察。</para>
            </sect3>
            <sect3>
                <title>为什么不在.rptdesign里写sql</title>
                <para>往往实际项目的业务总是复杂的，不希望将复杂的逻辑通过几个简单的参数传入拼凑sql来实现，再说这样调试sql也是一件麻烦的事情，也不利于SQL管理</para>
                <para>所以提倡将查询的商业逻辑放回java Manager类，然后designer负责设计数据如何排列。这样子更适和实际项目。</para>
            </sect3>
        </sect2>
        <sect2>
            <title>自己实现的BirtReportsView的原理</title>
            <sect3>
                <title>创建EngineConfig与ReportEngine实例</title>
                <programlisting><![CDATA[
public class BirtReportsView {
    private String engineHome;
    private ReportEngine engine;
    public BirtReportsView() {
        engineHome = System.getProperty("bookstore.root");  //engine home
        EngineConfig birtConfig = new EngineConfig();
        birtConfig.setEngineHome(engineHome);
        engine = new ReportEngine(birtConfig);
    }
}]]>
                </programlisting>
            </sect3>
            <sect3>
                <title>设定报表文件</title>
                <programlisting><![CDATA[
public void openReportDesign(String filePath) throws IOException, EngineException {
    File reportFilte = new File(engineHome + "/" + filePath);
    IReportRunnable design = engine.openReportDesign(reportFilte.getAbsolutePath());
    task = engine.createRunAndRenderTask(design);
}]]>
                </programlisting>
            </sect3>
            <sect3>
                <title>配置htmlrendercontext</title>
                <programlisting><![CDATA[
 private String scriptableJOName = "dsFactory"; //dsFactory 自由定义,主要在rptdesign中调用
 private String imageDirectory = "/report/images";
 private String baseImageUrl = "images";
 private void run(OutputStream outputStream) throws EngineException {
    HTMLRenderContext renderContext =  new HTMLRenderContext();
    //chart 生成图片目录
    renderContext.setImageDirectory(this.engineHome + "/" + imageDirectory);
    //web页面浏览 base url
    renderContext.setBaseImageURL(baseImageUrl);
    HashMap contextMap = new HashMap();
    contextMap.put(EngineConstants.APPCONTEXT_HTML_RENDER_CONTEXT, renderContext);
    task.setAppContext(contextMap);
    BirtDataSourceObject birtDataSourceObject = new BirtDataSourceObject();
    HTMLRenderOption options = new HTMLRenderOption();
    birtDataSourceObject.setResultList(resultList);
    options.setOutputStream(outputStream);
    task.setRenderOption(options);
    //增加api级别的java对象,以方便报表中调用获取报表数据
    task.addScriptableJavaObject(scriptableJOName, birtDataSourceObject);
    task.run();
}]]>
                </programlisting>
                <para>相关文章：</para>
                <orderedlist>
                    <listitem>
                        <para><ulink url="http://tools.osmosis.gr/blog/archives/2005/06/birt_and_object.html">BIRT and POJOs as datasources example</ulink></para>
                    </listitem>
                    <listitem>
                        <para>详细的 Report Engine API 请见[<ulink url="http://www.eclipse.org/birt/phoenix/deploy/reportEngineAPI.php">官方</ulink>]</para>
                    </listitem>
                </orderedlist>
            </sect3>
        </sect2>
        <sect2>
            <title>Birt View的使用</title>
            <para>见SaleReprontController.</para>
            <programlisting><![CDATA[
public ModelAndView view(HttpServletRequest request, HttpServletResponse response) throws Exception {
    String status = request.getParameter("status");
    String beginDate = request.getParameter("beginDate");
    String endDate = request.getParameter("endDate");
    List bookList = saleReportManager.findBooksByReportParam(status,
        DateUtil.parse(beginDate, "yyyy-M-d"), DateUtil.parse(endDate, "yyyy-M-d"));
    BirtReportView view = new BirtReportView();
    view.openReportDesign("/report/sale_report.rptdesign");
    view.putModel(bookList);
    return new ModelAndView(view);
}]]>
            </programlisting>
        </sect2>
    </sect1>

</chapter>

